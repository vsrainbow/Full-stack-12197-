const express = require("express");
const app = express();
const PORT = 3000;

app.use(express.json());

let seats = [];
const TOTAL_SEATS = 10;

for (let i = 1; i <= TOTAL_SEATS; i++) {
  seats.push({
    id: i,
    status: "available",
    lockedBy: null,
    lockExpiry: null,
  });
}

function releaseExpiredLocks() {
  const now = Date.now();
  seats.forEach((seat) => {
    if (seat.status === "locked" && seat.lockExpiry && now > seat.lockExpiry) {
      seat.status = "available";
      seat.lockedBy = null;
      seat.lockExpiry = null;
    }
  });
}
app.get("/seats", (req, res) => {
  releaseExpiredLocks();
  res.json(seats);
});

app.post("/seats/:id/lock", (req, res) => {
  releaseExpiredLocks();
  const seatId = parseInt(req.params.id);
  const { user } = req.body;

  const seat = seats.find((s) => s.id === seatId);
  if (!seat) {
    return res.status(404).json({ message: "Seat not found" });
  }

  if (seat.status === "booked") {
    return res.status(400).json({ message: "Seat already booked" });
  }

  if (seat.status === "locked") {
    return res.status(400).json({ message: "Seat already locked by another user" });
  }

  seat.status = "locked";
  seat.lockedBy = user;
  seat.lockExpiry = Date.now() + 60 * 1000; // 1 min lock

  res.json({
    message: `Seat ${seatId} locked successfully for 1 minute`,
    seat,
  });
});

app.post("/seats/:id/confirm", (req, res) => {
  releaseExpiredLocks();
  const seatId = parseInt(req.params.id);
  const { user } = req.body;

  const seat = seats.find((s) => s.id === seatId);
  if (!seat) {
    return res.status(404).json({ message: "Seat not found" });
  }

  if (seat.status === "booked") {
    return res.status(400).json({ message: "Seat already booked" });
  }

  if (seat.status !== "locked" || seat.lockedBy !== user) {
    return res.status(400).json({ message: "You must lock this seat before confirming" });
  }

  seat.status = "booked";
  seat.lockedBy = null;
  seat.lockExpiry = null;

  res.json({
    message: `Seat ${seatId} booked successfully by ${user}`,
    seat,
  });
});

app.listen(PORT, () => {
  console.log(`🎟️ Ticket Booking API running on http://localhost:${PORT}`);
});
